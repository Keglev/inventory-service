name: Inventory Service Staging Deploy

# /**
#  * GitHub Actions workflow to manually deploy a production-ready Docker image.
#  *
#  * Trigger:
#  *   - Manual execution via GitHub UI (workflow_dispatch).
#  *
#  * Steps:
#  *   1. Checkout source code.
#  *   2. Set up JDK environment (for potential Maven usage).
#  *   3. Authenticate with DockerHub.
#  *   4. Build Docker image using 'prod' Spring profile and tag with both 'prod' and Git SHA.
#  *   5. Push image(s) to DockerHub.
#  */

on:
  workflow_dispatch:

concurrency:
  group: staging-image-${{ github.ref }}
  cancel-in-progress: false

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # /**
      #  * Step 1: Checkout the current Git branch.
      #  */
      - name: Checkout code
        uses: actions/checkout@v4

      # /**
      #  * Step 2: Set up JDK 17 using Temurin distribution.
      #  * Required in case any Java-based tools are triggered during image build.
      #  */
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      # /**
      #  * Step 3: Authenticate with DockerHub to allow pushing images.
      #  */
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # /**
      #  * Step 4: Capture the short Git commit SHA for tagging the Docker image.
      #  */
      - name: Set Git SHA
        run: echo "GIT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      # /**
      #  * Step 5: Build Docker image with:
      #  *   - PROFILE=prod to activate production Spring profile.
      #  *   - Two tags: 'prod' and the specific Git SHA (for traceability).
      #  */
      - name: Build Docker image (PROD and SHA)
        run: |
          docker build --build-arg PROFILE=prod \
            -t ${{ secrets.DOCKER_USERNAME }}/inventory-service:prod \
            -t ${{ secrets.DOCKER_USERNAME }}/inventory-service:$GIT_SHA .

      # /**
      #  * Step 6: Push both the 'prod' and Git SHA tagged images to DockerHub.
      #  */
      - name: Push Docker images
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/inventory-service:prod
          docker push ${{ secrets.DOCKER_USERNAME }}/inventory-service:$GIT_SHA

       # Reminder to manually deploy with Fly
      - name: Deployment instructions
        run: |
          echo "Docker images pushed successfully."
          echo "To deploy manually to Fly.io, run:"
          echo "fly deploy --image ${{ secrets.DOCKER_USERNAME }}/inventory-service:${GIT_SHA}"
