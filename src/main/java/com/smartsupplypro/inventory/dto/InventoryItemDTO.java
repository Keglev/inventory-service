package com.smartsupplypro.inventory.dto;

import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.PositiveOrZero;
import jakarta.validation.constraints.NotBlank;
import jakarta.validation.constraints.Positive;

import lombok.*;

import java.math.BigDecimal;
import java.time.LocalDateTime;

/**
 * Data Transfer Object for inventory item data.
 *
 * <p>Used for creating, updating, and retrieving inventory items
 * via REST APIs. Includes validation annotations to enforce data
 * integrity at the controller level.
 *
 * <p>Serves as the main payload between backend services and frontend consumers
 * such as dashboards, admin panels, or stock editors.
 */
@Data
@Builder
@Getter
@Setter
@NoArgsConstructor
@AllArgsConstructor
public class InventoryItemDTO {

    /**
     * Unique identifier for the inventory item.
     * Usually generated by the system or provided as UUID.
     */
    @NotBlank(message = "Item ID is mandatory")
    private String id;

    /**
     * Display name of the inventory item.
     */
    @NotBlank(message = "Item name is mandatory")
    private String name;

    /**
     * Quantity currently in stock.
     * Must be zero or positive.
     */
    @NotNull(message = "Quantity is mandatory")
    @PositiveOrZero(message = "Quantity must be zero or positive")
    private int quantity;

    /**
     * Price per unit of the item.
     * Must be greater than zero.
     */
    @NotNull(message = "Price is mandatory")
    @Positive(message = "Price must be greater than zero")
    private BigDecimal price;

    /**
     * Calculated total value = quantity Ã— price.
     * Typically populated by the backend for reporting.
     */
    private BigDecimal totalValue;

    /**
     * Foreign key reference to the associated supplier.
     */
    @NotBlank(message = "Supplier ID is mandatory")
    private String supplierId;

    /**
     * Username or identifier of the user who created the record.
     * Useful for auditing and filtering.
     */
    private String createdBy;

    /**
     * Timestamp of when the item record was created.
     * Typically set by the backend.
     */
    private LocalDateTime createdAt;

    /**
    * Name of the supplier associated with this inventory item.
    * Populated during projection or mapping for UI display.
    */
    private String supplierName;

    private int minimumQuantity;


}
