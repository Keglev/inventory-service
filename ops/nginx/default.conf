# -----------------------------------------------------------------------------
# Smart Supply Pro — Frontend (Vite SPA) : Nginx vhost
# Purpose:
#   - Serve the compiled SPA and static assets on port 8080
#   - Proxy OAuth2 and API requests to the Spring backend (Fly)
#   - Ensure SPA fallback for client-side routing
#   - Cache content-hashed assets; never cache index.html
# -----------------------------------------------------------------------------
server {
  listen 8080 default_server;
  server_name _;

  # Root directory produced by the Vite build stage
  root   /usr/share/nginx/html;
  index  index.html;

  # ---------------------------------------------------------------------------
  # OAuth2 INIT (frontend → backend)
  # Starts the Google OAuth flow. MUST be proxied to the backend, not handled by SPA.
  # Example: GET /oauth2/authorization/google
  # ---------------------------------------------------------------------------
  location ^~ /oauth2/authorization/ {
    proxy_pass https://inventoryservice.fly.dev;
    proxy_ssl_server_name on;
    proxy_ssl_name inventoryservice.fly.dev;

    proxy_http_version 1.1;
    proxy_set_header Connection "";
    proxy_set_header Host inventoryservice.fly.dev;   # backend host
    proxy_set_header X-Forwarded-Host $host;          # original FE host
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    # Make backend-issued cookies first-party on the FE domain
    proxy_cookie_domain inventoryservice.fly.dev $host;

    # Flip any absolute Location headers emitted by backend back to FE host
    proxy_redirect https://inventoryservice.fly.dev/ https://$host/;
  }

  # ---------------------------------------------------------------------------
  # OAuth2 CALLBACK (Google → backend → FE)
  # Google redirects here after login. MUST be proxied to backend so it can
  # finalize the session and set cookies; then we rewrite cookie domain.
  # Example: GET /login/oauth2/code/google
  # ---------------------------------------------------------------------------
  location ^~ /login/oauth2/ {
    proxy_pass https://inventoryservice.fly.dev;
    proxy_ssl_server_name on;
    proxy_ssl_name inventoryservice.fly.dev;

    proxy_http_version 1.1;
    proxy_set_header Connection "";
    proxy_set_header Host inventoryservice.fly.dev;
    proxy_set_header X-Forwarded-Host $host;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    proxy_cookie_domain inventoryservice.fly.dev $host;
    proxy_redirect https://inventoryservice.fly.dev/ https://$host/;
  }

  # ---------------------------------------------------------------------------
  # LOGOUT (frontend → backend)
  # Proxy /logout so Spring Security invalidates the session and sets cookie
  # expirations; rewrite cookies and redirects back to FE.
  # ---------------------------------------------------------------------------
  location = /logout {
    proxy_pass https://inventoryservice.fly.dev/logout;
    proxy_ssl_server_name on;
    proxy_ssl_name inventoryservice.fly.dev;

    proxy_http_version 1.1;
    proxy_set_header Connection "";
    proxy_set_header Host inventoryservice.fly.dev;
    proxy_set_header X-Forwarded-Host $host;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    proxy_cookie_domain inventoryservice.fly.dev $host;
    proxy_redirect https://inventoryservice.fly.dev/ https://$host/;
  }

  # ---------------------------------------------------------------------------
  # API reverse proxy (same-origin)
  # Make SPA calls to /api/* first-party (no 3rd-party cookie issues) and
  # forward to the Fly backend (HTTPS) with SNI, preserving path/query.
  # ---------------------------------------------------------------------------
  location ^~ /api/ {
    proxy_pass https://inventoryservice.fly.dev;

    # TLS/SNI for the upstream
    proxy_ssl_server_name on;
    proxy_ssl_name inventoryservice.fly.dev;

    # HTTP/1.1 + no hop-by-hop Connection header
    proxy_http_version 1.1;
    proxy_set_header Connection "";

    # Forward client/proxy info
    proxy_set_header Host inventoryservice.fly.dev;   # backend's host
    proxy_set_header X-Forwarded-Host $host;          # original FE host
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    # Make session cookies first-party on the FE domain
    proxy_cookie_domain inventoryservice.fly.dev $host;

    # Do not auto-rewrite Location; backend generates API-relative responses
    proxy_redirect off;

    # Timeouts/buffers for API calls (tuned for small JSON)
    proxy_connect_timeout 5s;
    proxy_send_timeout 30s;
    proxy_read_timeout 30s;
    client_max_body_size 2m;
  }

  # ---- SPA fallback ----------------------------------------------------------
  # Try the exact file, then a directory index, and finally fall back to index.html
  # This enables BrowserRouter-style deep links to load the app shell.
  # IMPORTANT: keep this *below* the proxy locations so auth/API do not hit SPA.
  location / {
    try_files $uri $uri/ /index.html;
  }

  # ---- Static assets (content-hashed) ---------------------------------------
  # Vite outputs hashed filenames under /assets/. Safe to cache "forever".
  location /assets/ {
    try_files $uri =404;
    expires 1y;
    add_header Cache-Control "public, immutable" always;
  }

  # ---- App shell (never cached) ---------------------------------------------
  # index.html must remain uncached so clients always receive fresh asset URLs.
  location = /index.html {
    add_header Cache-Control "no-cache" always;
  }
}
