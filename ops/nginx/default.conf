# -----------------------------------------------------------------------------
# Smart Supply Pro — Frontend (Vite SPA) : Nginx vhost
# Purpose:
#   - Serve the compiled SPA and static assets on port 8080
#   - Proxy OAuth2 and API requests to the Spring backend (Fly)
#   - Ensure SPA fallback for client-side routing
#   - Cache content-hashed assets; never cache index.html
# -----------------------------------------------------------------------------
server {
  listen 8080 default_server;
  server_name _;

  # Root directory produced by the Vite build stage
  root   /usr/share/nginx/html;
  index  index.html;

  # ---------------------------------------------------------------------------
  # OAuth2 INIT (frontend → backend)
  # Example: GET /oauth2/authorization/google
  # MUST be proxied to the backend, not handled by SPA.
  # ---------------------------------------------------------------------------
  location ^~ /oauth2/authorization/ {
    proxy_pass https://inventoryservice.fly.dev;

    proxy_ssl_server_name on;
    proxy_ssl_name inventoryservice.fly.dev;

    proxy_http_version 1.1;
    proxy_set_header Connection "";

    # Upstream sees real backend host
    proxy_set_header Host inventoryservice.fly.dev;

    # Forward original FE host and HTTPS scheme/port (TLS terminated at Koyeb)
    proxy_set_header X-Forwarded-Host $host;
    proxy_set_header X-Forwarded-Proto https;
    proxy_set_header X-Forwarded-Port 443;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    # Make backend-issued cookies first-party on the FE domain
    proxy_cookie_domain inventoryservice.fly.dev $host;

    # Normalize absolute redirects back to FE and remove any :8080
    proxy_redirect https://inventoryservice.fly.dev/ https://$host/;
    proxy_redirect http://$host:8080/               https://$host/;
    proxy_redirect http://$host:8080                https://$host;
  }

  # ---------------------------------------------------------------------------
  # OAuth2 CALLBACK (Google → backend → FE)
  # Example: GET /login/oauth2/code/google
  # MUST be proxied so backend can finalize session & set cookies.
  # ---------------------------------------------------------------------------
  location ^~ /login/oauth2/ {
    proxy_pass https://inventoryservice.fly.dev;

    proxy_ssl_server_name on;
    proxy_ssl_name inventoryservice.fly.dev;

    proxy_http_version 1.1;
    proxy_set_header Connection "";

    proxy_set_header Host inventoryservice.fly.dev;
    proxy_set_header X-Forwarded-Host $host;
    proxy_set_header X-Forwarded-Proto https;
    proxy_set_header X-Forwarded-Port 443;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    proxy_cookie_domain inventoryservice.fly.dev $host;

    proxy_redirect https://inventoryservice.fly.dev/ https://$host/;
    proxy_redirect http://$host:8080/               https://$host/;
    proxy_redirect http://$host:8080                https://$host;
  }

  # ---------------------------------------------------
  # LOGIN (frontend → backend)  — exact match so SPA routes aren't swallowed
  # ---------------------------------------------------
  location = /login {
    proxy_pass https://inventoryservice.fly.dev/login;

    proxy_ssl_server_name on;
    proxy_ssl_name inventoryservice.fly.dev;

    proxy_http_version 1.1;
    proxy_set_header Connection "";
    proxy_set_header Host                  inventoryservice.fly.dev;
    proxy_set_header X-Forwarded-Host      $host;
    proxy_set_header X-Forwarded-Proto     https;
    proxy_set_header X-Forwarded-Port      443;
    proxy_set_header X-Forwarded-For       $proxy_add_x_forwarded_for;

    proxy_cookie_domain inventoryservice.fly.dev $host;

    proxy_redirect https://inventoryservice.fly.dev/ https://$host/;
    proxy_redirect http://inventoryservice.fly.dev/  https://$host/;
  }
  # ---------------------------------------------------
  # LOGIN (frontend → backend)  — prefix match so SPA routes aren't swallowed
  # ---------------------------------------------------
  location ^~ /login/ {
    proxy_pass https://inventoryservice.fly.dev;

    proxy_ssl_server_name on;
    proxy_ssl_name inventoryservice.fly.dev;

    proxy_http_version 1.1;
    proxy_set_header Connection "";
    proxy_set_header Host                  inventoryservice.fly.dev;
    proxy_set_header X-Forwarded-Host      $host;
    proxy_set_header X-Forwarded-Proto     https;
    proxy_set_header X-Forwarded-Port      443;
    proxy_set_header X-Forwarded-For       $proxy_add_x_forwarded_for;

    proxy_cookie_domain inventoryservice.fly.dev $host;

    proxy_redirect https://inventoryservice.fly.dev/ https://$host/;
    proxy_redirect http://inventoryservice.fly.dev/  https://$host/;
  }

  # ---------------------------------------------------------------------------
  # LOGOUT (frontend → backend)  — exact match so SPA routes aren't swallowed
  # ---------------------------------------------------------------------------
  location = /logout {
    proxy_pass https://inventoryservice.fly.dev/logout;

    proxy_ssl_server_name on;
    proxy_ssl_name inventoryservice.fly.dev;

    proxy_http_version 1.1;
    proxy_set_header Connection "";

    proxy_set_header Host inventoryservice.fly.dev;
    proxy_set_header X-Forwarded-Host $host;
    proxy_set_header X-Forwarded-Proto https;
    proxy_set_header X-Forwarded-Port 443;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    proxy_cookie_domain inventoryservice.fly.dev $host;

    proxy_redirect https://inventoryservice.fly.dev/ https://$host/;
    proxy_redirect http://$host:8080/               https://$host/;
    proxy_redirect http://$host:8080                https://$host;
  }

  # ---------------------------------------------------------------------------
  # API reverse proxy (same-origin)
  # Frontend calls /api/* → Nginx → https://inventoryservice.fly.dev/*
  # ---------------------------------------------------------------------------
  location ^~ /api/ {
    proxy_pass https://inventoryservice.fly.dev;

    proxy_ssl_server_name on;
    proxy_ssl_name inventoryservice.fly.dev;

    proxy_http_version 1.1;
    proxy_set_header Connection "";

    proxy_set_header Host inventoryservice.fly.dev;   # backend host
    proxy_set_header X-Forwarded-Host $host;          # original FE host
    proxy_set_header X-Forwarded-Proto https;         # force original scheme
    proxy_set_header X-Forwarded-Port 443;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    proxy_cookie_domain inventoryservice.fly.dev $host;

    # APIs shouldn't redirect; disable rewrite logic here
    proxy_redirect off;

    proxy_connect_timeout 5s;
    proxy_send_timeout 30s;
    proxy_read_timeout 30s;
    client_max_body_size 2m;
  }

  # ---- SPA fallback ----------------------------------------------------------
  # IMPORTANT: keep this below the proxy locations so auth/API don't hit SPA.
  location / {
    try_files $uri $uri/ /index.html;
  }

  # ---- Static assets (content-hashed) ---------------------------------------
  location /assets/ {
    try_files $uri =404;
    expires 1y;
    add_header Cache-Control "public, immutable" always;
  }

  # ---- App shell (never cached) ---------------------------------------------
  location = /index.html {
    add_header Cache-Control "no-cache" always;
  }
}
