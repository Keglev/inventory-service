# -----------------------------------------------------------------------------
# Smart Supply Pro — Frontend (Vite SPA) : Nginx vhost
# Purpose:
#   - Serve the compiled SPA and static assets on port 8080
#   - Provide SPA fallback for client-side routing (/dashboard, /settings, …)
#   - Apply aggressive caching to content-hashed assets under /assets/
#   - Ensure index.html is never cached (fresh shell + correct asset versions)
# -----------------------------------------------------------------------------
server {
  listen 8080 default_server;
  server_name _;

  # Root directory produced by the Vite build stage
  root   /usr/share/nginx/html;
  index  index.html;

  # ---- SPA fallback ----------------------------------------------------------
  # Try the exact file, then a directory index, and finally fall back to index.html
  # This enables BrowserRouter-style deep links to load the app shell.
  location / {
    try_files $uri $uri/ /index.html;
  }

  # ---- API reverse proxy (same-origin) -------------------------------------
  # Purpose:
  #   - Make SPA calls to /api/* first-party (no 3rd-party cookie issues)
  #   - Forward to the Fly backend (HTTPS) with SNI, preserving path/query
  #   - Rewrite Set-Cookie Domain to the SPA domain so the browser stores the cookie
  #
  # Requirements:
  #   - Frontend must call /api/* (e.g., VITE_API_BASE=/api)
  #   - Koyeb service exposes container port 8080 publicly at path "/"
  #
  location /api/ {
    # Forward to Fly backend over HTTPS, preserve path/query
    proxy_pass https://inventoryservice.fly.dev;

    # TLS/SNI for the upstream
    proxy_ssl_server_name on;
    proxy_ssl_name inventoryservice.fly.dev;

    # HTTP/1.1 + no hop-by-hop Connection header
    proxy_http_version 1.1;
    proxy_set_header Connection "";

    # Forward client/proxy info
    proxy_set_header Host inventoryservice.fly.dev;   # backend's host
    proxy_set_header X-Forwarded-Host $host;          # original FE host
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    # Make session cookies first-party on the FE domain
    proxy_cookie_domain inventoryservice.fly.dev $host;

    proxy_redirect off;

    # Timeouts/buffers for API calls
    proxy_connect_timeout 5s;
    proxy_send_timeout 30s;
    proxy_read_timeout 30s;
    client_max_body_size 2m;
  }
  # ---------------------------------------------------------------------------

    # ---- OAuth2 and auth endpoints (proxy to backend) ------------------------
  # Ensures all auth flows are same-origin, so Set-Cookie is rewritten
  location /oauth2/ {
    proxy_pass https://inventoryservice.fly.dev;     # no $request_uri → no resolver needed
    proxy_ssl_server_name on;
    proxy_ssl_name inventoryservice.fly.dev;

    proxy_http_version 1.1;
    proxy_set_header Connection "";
    proxy_set_header Host inventoryservice.fly.dev;
    proxy_set_header X-Forwarded-Host $host;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    # Rewrite cookies from backend domain → FE domain (first-party)
    proxy_cookie_domain inventoryservice.fly.dev $host;

    # Preserve redirects but flip absolute Location back to FE host if backend emits its own base URL
    proxy_redirect https://inventoryservice.fly.dev/ https://$host/;
  }

  location /login/ {
    proxy_pass https://inventoryservice.fly.dev;
    proxy_ssl_server_name on;
    proxy_ssl_name inventoryservice.fly.dev;
    proxy_http_version 1.1;
    proxy_set_header Connection "";
    proxy_set_header Host inventoryservice.fly.dev;
    proxy_set_header X-Forwarded-Host $host;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_cookie_domain inventoryservice.fly.dev $host;
    proxy_redirect https://inventoryservice.fly.dev/ https://$host/;
  }

  location /logout {
    proxy_pass https://inventoryservice.fly.dev;
    proxy_ssl_server_name on;
    proxy_ssl_name inventoryservice.fly.dev;
    proxy_http_version 1.1;
    proxy_set_header Connection "";
    proxy_set_header Host inventoryservice.fly.dev;
    proxy_set_header X-Forwarded-Host $host;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_cookie_domain inventoryservice.fly.dev $host;
    proxy_redirect https://inventoryservice.fly.dev/ https://$host/;
  }

  # Optional: API logout helper (your AuthController exposes this)
  location /api/auth/logout {
    proxy_pass https://inventoryservice.fly.dev;
    proxy_ssl_server_name on;
    proxy_ssl_name inventoryservice.fly.dev;
    proxy_http_version 1.1;
    proxy_set_header Connection "";
    proxy_set_header Host inventoryservice.fly.dev;
    proxy_set_header X-Forwarded-Host $host;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_cookie_domain inventoryservice.fly.dev $host;
    proxy_redirect https://inventoryservice.fly.dev/ https://$host/;
  }

  # ---- Static assets (content-hashed) ---------------------------------------
  # Vite outputs hashed filenames under /assets/. Safe to cache "forever".
  location /assets/ {
    try_files $uri =404;
    expires 1y;
    add_header Cache-Control "public, immutable" always;
  }

  # ---- App shell (never cached) ---------------------------------------------
  # index.html must remain uncached so clients always receive fresh asset URLs.
  location = /index.html {
    add_header Cache-Control "no-cache" always;
  }
}
